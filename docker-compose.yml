services:
  db:
    build:
      context: ./db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: queenless_pollination_platform
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - queenless_pollination_platform
    healthcheck:
      # Check if the database is ready
      test: ["CMD", "mysql", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}", "-e", "SHOW DATABASES"]
      interval: 1s
      timeout: 1s
      retries: 30
      # See [mysql - Docker compose wait for database service initialisation - Stack Overflow](https://stackoverflow.com/questions/53407287/docker-compose-wait-for-database-service-initialisation)

  shopping-frontend:
    build:
      context: ./shopping/frontend
      args:
        - API_URL=http://routing-backend:5001/
        - NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN=${NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN}
    ports:
      - "3000:3000"
    depends_on:
      - routing-backend
    networks:
      - queenless_pollination_platform

  routing-backend:
    build:
      context: ./routing/backend
    ports:
      - "5001:5001"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      DB_NAME: queenless_pollination_platform
    networks:
      - queenless_pollination_platform

volumes:
  mysql-data:

networks:
  queenless_pollination_platform:
    driver: bridge